{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappGaus.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappGaus.vue","mtime":1636999989249},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiBpbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4uL2NvbXBvbmVudHMvTGluZUNoYXJ0LmpzJwogaW1wb3J0IFNjYXR0ZXJDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL1NjYXR0ZXJDaGFydC5qcycKZXhwb3J0IGRlZmF1bHR7CiAgICBjb21wb25lbnRzOiB7CiAgICAgIExpbmVDaGFydCwKICAgICAgU2NhdHRlckNoYXJ0LAogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgICByOiAtMC41LAogICAgICAgICAgICByTWF4OiAxLjAsCiAgICAgICAgICAgIHJtaW46IDAsCiAgICAgICAgICAgIHhNYXg6IDEsCiAgICAgICAgICAgIHhNaW46IDAsCiAgICAgICAgICAgIGxlc3RsYW1lcmk6IGZhbHNlLAogICAgICAgICAgICBiaWZ1cjogZmFsc2UsCiAgICAgICAgICAgIHBva2F6bGFwdW5pdmE6IGZhbHNlLAogICAgICAgICAgICBkYXRhY29sbGVjdGlvbjogbnVsbCwKICAgICAgICAgICAgZGF0YWNvbGxlY3Rpb25iOiBudWxsLAogICAgICAgICAgICBkYXRhY29sbGVjdGlvbmw6IG51bGwsCiAgICAgICAgICAgIGNoYXJ0T3B0aW9uczogbnVsbCwKICAgICAgICAgICAgY2hhcnRPcHRpb25zbDogbnVsbCwKICAgICAgICAgICAgeDogW10sCiAgICAgICAgICAgIHk6IFtdLAogICAgICAgICAgICBseTogW10sCiAgICAgICAgICAgIHJiOiBbXSAgICAgICAgCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQgKCkgewogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgIGYoeCl7CiAgICAgICAgICAgcmV0dXJuIE1hdGguZXhwKCgtNC45KSpNYXRoLnBvdyh4LDIpKStOdW1iZXIodGhpcy5yKQogICAgICAgfSwKICAgICAgIGZyKHgscil7CiAgICAgICAgICAgIHJldHVybiBNYXRoLmV4cCgoLTQuOSkqTWF0aC5wb3coKHgpLDIpKStOdW1iZXIocikKICAgICAgIH0sCiAgICAgICBmRGlmZih4KXsKICAgICAgICAgICByZXR1cm4gTWF0aC5sb2coTWF0aC5hYnMoKDIqNC45KngpLyhNYXRoLmV4cCg0LjkqTWF0aC5wb3coeCwyKSkpKSkKICAgICAgIH0sCiAgICAgIGNoYXJ0TWFwcGluZygpewogICAgICAgICAgdGhpcy54ID0gW10KICAgICAgICAgIHRoaXMueSA9IFtdCiAgICAgICAgZm9yIChsZXQgaSA9IC0xOyBpIDwgdGhpcy54TWF4OyBpID0gaSswLjAxKSB7CiAgICAgICAgICAgdGhpcy54LnB1c2goKGkpLnRvRml4ZWQoMikpIAogICAgICAgICAgIHRoaXMueS5wdXNoKHRoaXMuZihpKSkgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiB0aGlzLnlbNV0pCiAgICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gewogICAgICAgICAgbGFiZWxzOiB0aGlzLngsCiAgICAgICAgICBkYXRhc2V0czogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbGFiZWw6ICfQntGC0L7QsdGA0LDQttC10L3QuNC1JywKICAgICAgICAgICAgICBkYXRhOiB0aGlzLnksCiAgICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDAsCiAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiKDEzOSwgMCwgMCknCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBsYWJlbDogJ3k9eCcsCiAgICAgICAgICAgICAgZGF0YTogdGhpcy54LAogICAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAwLAogICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiKDAsIDAsIDApJwogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0gewogICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgICAgICAgIHhBeGVzOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG1pbjogdGhpcy54WzBdLAogICAgICAgICAgICAgICAgICAgIG1heDogdGhpcy54W3RoaXMueC5sZW5ndGgtMV0sCiAgICAgICAgICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RlcFNpemU6IDAuNQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNoYXJ0QmlmdXIoKXsKICAgICAgICB0aGlzLnJiID0gW10KICAgICAgICBmb3IgKGxldCBpID0gLTE7IGkgPCB0aGlzLnJNYXg7IGkgPSBpKzAuMDAxKSB7CiAgICAgICAgICAgIHRoaXMucmIucHVzaChpLnRvRml4ZWQoMykpICAgICAgICAgICAKICAgICAgICB9CiAgICAgICAgdmFyIHJkbiA9IHRoaXMucmJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnRoaXMucmIubGVuZ3RoKV0KICAgICAgICBjb25zdCBubiA9IHRoaXMucmIubGVuZ3RoCiAgICAgICAgdmFyIHh4ID0gW10KICAgICAgICB2YXIgZGF0YXMgPSBbe3g6MCx5OjB9XQogICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgbm47aysrKSB7CiAgICAgICAgICAgIHh4ID0gW3Jkbl0KICAgICAgICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCBubi0xOyBuKyspIHsKICAgICAgICAgICAgICAgIHh4LnB1c2godGhpcy5mcih4eFtuXSx0aGlzLnJiW2tdKSkKICAgICAgICAgICAgICAgIGlmKG4+bm4tMjApewogICAgICAgICAgICAgICAgICAgIGRhdGFzLnB1c2goe3g6dGhpcy5yYltrXSx5Onh4W3h4Lmxlbmd0aC0xXX0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgfQogICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uYiA9IHsKICAgICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhcywKICAgICAgICAgICAgICAgIGxhYmVsOiAi0JHQuNGE0YPRgNCw0LrRhtC40L7QvdC90LDRjyDQlNC40LDQs9GA0LDQvNC80LAiLAogICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2IoMTM5LCAwLCAwKScsCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMTM5LCAwLCAwKScsCiAgICAgICAgICAgICAgICBwb2ludFJhZGl1czogMQogICAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSwKICAgICAgY2hhcnRMeWFwdW5vdigpewogICAgICAgICAgY29uc3Qgc3RhcnQ9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgICAgdGhpcy5yYiA9IFtdCiAgICAgICAgICBmb3IgKGxldCBpID0gLTE7IGkgPCB0aGlzLnJNYXg7IGkgPSBpKzAuMDAxKSB7CiAgICAgICAgICAgIHRoaXMucmIucHVzaChpLnRvRml4ZWQoMykpICAgICAgICAgICAKICAgICAgICAgfSAKICAgICAgICAgIHZhciBzdW1tID0gW10gCiAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMucmIubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICB2YXIgc3VtID0gMAogICAgICAgICAgICAgIHZhciB4bCA9IFstMC4xXQogICAgICAgICAgICAgIHZhciB4bGwgPSBbXQogICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5yYi5sZW5ndGgtMTsgaSsrKSB7CiAgICAgICAgICAgICAgICAgIHhsLnB1c2godGhpcy5mcih4bFtpXSx0aGlzLnJiW2pdKSkKICAgICAgICAgICAgICAgICAgeGxsLnB1c2godGhpcy5mRGlmZih4bFtpXSkpCiAgICAgICAgICAgICAgICAgIHN1bSA9IHN1bSsgeGxsW2ldIAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBzdW1tLnB1c2goc3VtL3RoaXMucmIubGVuZ3RoKQogICAgICAgICAgfQogICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICBjb25zb2xlLmxvZyhlbmQtc3RhcnQpOwogICAgICAgICAgIHRoaXMuZGF0YWNvbGxlY3Rpb25sID0gewogICAgICAgICAgbGFiZWxzOiB0aGlzLnJiLAogICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIGxhYmVsOiAn0J/QvtC60LDQt9Cw0YLQtdC70Lgg0JvRj9C/0YPQvdC+0LLQsCcsCiAgICAgICAgICAgICAgZGF0YTogc3VtbSwKICAgICAgICAgICAgICBmaWxsOiBmYWxzZSwKICAgICAgICAgICAgICBwb2ludFJhZGl1czogMCwKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYigxMzksIDAsIDApJywKICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uc2wgPSB7CiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgICAgIGdyaWRMaW5lczogewogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB0aWNrczogeyAgIAogICAgICAgICAgICAgICAgICAgIG1pbjogLTUuMCwgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBwYWludENoYXJ0KCl7CiAgICAgICAgICB0aGlzLmNoYXJ0TWFwcGluZygpCiAgICAgICAgICBpZih0aGlzLmJpZnVyKXsKICAgICAgICAgICAgICB0aGlzLmNoYXJ0QmlmdXIoKQogICAgICAgICAgfQogICAgICAgICAgaWYodGhpcy5wb2themxhcHVuaXZhKXsKICAgICAgICAgICAgdGhpcy5jaGFydEx5YXB1bm92KCkKICAgICAgICAgIH0KICAgICAgfSwKICAgICAgYXN5bmMgcGFpbnRtYXBwKCl7CiAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo1NjA2My9hcGkvbWFwcGluZ3BsYW5rIiwKICAgICAgICAgICB7CiAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICBoZWFkZXJzOiB7IkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIiwgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0sCiAgICAgICAgICAgICAgIGJvZHk6SlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgIHI6IE51bWJlcih0aGlzLmtvZnIpLAogICAgICAgICAgICAgICAgICAgIGxlc3RsYW1lcmk6IHRoaXMubGVzdGxhbWVyaSwKICAgICAgICAgICAgICAgICAgICBiaWZ1cjogdGhpcy5iaWZ1ciwKICAgICAgICAgICAgICAgICAgICBwb2themxhcHVuaXZhOiB0aGlzLnBva2F6bGFwdW5pdmEsCiAgICAgICAgICAgICAgICAgICAgbG9naW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImxvZ2luIikgPT09IG51bGwgPyBudWxsOnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImxvZ2luIiksCiAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgfSk7CiAgICAgICAgICAgaWYocmVzcG9uc2Uub2sgPT09IHRydWUpewogICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5qc29uKCkpOwogICAgICAgICAgICAgICBjb25zb2xlLmxvZyhOdW1iZXIodGhpcy5rb2ZyKSArIHR5cGVvZihOdW1iZXIodGhpcy5rb2ZyKSkpCiAgICAgICAgICAgfSAgICAgICAgICAKICAgICAgICB9CiAgICB9CiAgCn0KCg=="},{"version":3,"sources":["MappGaus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"MappGaus.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Отображение Гаусса</h1>\r\n                <b-form id=\"mappingplank\">\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (-1;1)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"-1\" max=\"1\" v-model=\"r\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея</label>\r\n                            <b-form-checkbox id=\"lameria\" v-model=\"lestlameri\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"bifuraks\">Построить бифуркационную диаграмму</label>\r\n                            <b-form-checkbox id=\"bifuraks\" v-model=\"bifur\"></b-form-checkbox>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lapunov\">Построить показатель Ляпунова</label>\r\n                            <b-form-checkbox id=\"lapunov\" v-model=\"pokazlapuniva\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <b-button type=\"button\" form=\"mappingplank\" variant=\"secondary\" v-on:click=\"paintChart\">Submit</b-button>\r\n                    </div>\r\n                </b-form>\r\n                <div class=\"small\">\r\n                    <line-chart :chart-data=\"datacollection\" :options=\"chartOptions \"/>\r\n                </div>\r\n                <div class=\"small\" v-if=\"bifur\">\r\n                    <scatter-chart :chart-data=\"datacollectionb\"/>\r\n                </div>\r\n                <div class=\"small\" v-if=\"pokazlapuniva\">\r\n                    <line-chart :chart-data=\"datacollectionl\" :options=\"chartOptionsl\"/>\r\n                </div>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n import LineChart from '../components/LineChart.js'\r\n import ScatterChart from '../components/ScatterChart.js'\r\nexport default{\r\n    components: {\r\n      LineChart,\r\n      ScatterChart,\r\n    },\r\n    data(){\r\n        return{\r\n             r: -0.5,\r\n            rMax: 1.0,\r\n            rmin: 0,\r\n            xMax: 1,\r\n            xMin: 0,\r\n            lestlameri: false,\r\n            bifur: false,\r\n            pokazlapuniva: false,\r\n            datacollection: null,\r\n            datacollectionb: null,\r\n            datacollectionl: null,\r\n            chartOptions: null,\r\n            chartOptionsl: null,\r\n            x: [],\r\n            y: [],\r\n            ly: [],\r\n            rb: []        \r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n       f(x){\r\n           return Math.exp((-4.9)*Math.pow(x,2))+Number(this.r)\r\n       },\r\n       fr(x,r){\r\n            return Math.exp((-4.9)*Math.pow((x),2))+Number(r)\r\n       },\r\n       fDiff(x){\r\n           return Math.log(Math.abs((2*4.9*x)/(Math.exp(4.9*Math.pow(x,2)))))\r\n       },\r\n      chartMapping(){\r\n          this.x = []\r\n          this.y = []\r\n        for (let i = -1; i < this.xMax; i = i+0.01) {\r\n           this.x.push((i).toFixed(2)) \r\n           this.y.push(this.f(i))          \r\n        }\r\n        console.log(typeof this.y[5])\r\n          this.datacollection = {\r\n          labels: this.x,\r\n          datasets: [\r\n            {\r\n              label: 'Отображение',\r\n              data: this.y,\r\n              fill: false,\r\n              pointRadius: 0,\r\n               borderColor: 'rgb(139, 0, 0)'\r\n            }, {\r\n              label: 'y=x',\r\n              data: this.x,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(0, 0, 0)'\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptions = {\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                    min: this.x[0],\r\n                    max: this.x[this.x.length-1],\r\n                    ticks: {\r\n                        stepSize: 0.5\r\n                    }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n      },\r\n      chartBifur(){\r\n        this.rb = []\r\n        for (let i = -1; i < this.rMax; i = i+0.001) {\r\n            this.rb.push(i.toFixed(3))           \r\n        }\r\n        var rdn = this.rb[Math.floor(Math.random()*this.rb.length)]\r\n        const nn = this.rb.length\r\n        var xx = []\r\n        var datas = [{x:0,y:0}]\r\n        for (let k = 0; k < nn;k++) {\r\n            xx = [rdn]\r\n            for (let n = 0; n < nn-1; n++) {\r\n                xx.push(this.fr(xx[n],this.rb[k]))\r\n                if(n>nn-20){\r\n                    datas.push({x:this.rb[k],y:xx[xx.length-1]})\r\n                }\r\n            }\r\n            \r\n        }\r\n         this.datacollectionb = {\r\n            datasets: [{\r\n                data: datas,\r\n                label: \"Бифуракционная Диаграмма\",\r\n                borderColor: 'rgb(139, 0, 0)',\r\n                backgroundColor: 'rgb(139, 0, 0)',\r\n                pointRadius: 1\r\n            }]\r\n        }\r\n      },\r\n      chartLyapunov(){\r\n          const start= new Date().getTime();\r\n          this.rb = []\r\n          for (let i = -1; i < this.rMax; i = i+0.001) {\r\n            this.rb.push(i.toFixed(3))           \r\n         } \r\n          var summ = [] \r\n          for (let j = 0; j < this.rb.length; j++) {\r\n              var sum = 0\r\n              var xl = [-0.1]\r\n              var xll = []\r\n              for (let i = 0; i < this.rb.length-1; i++) {\r\n                  xl.push(this.fr(xl[i],this.rb[j]))\r\n                  xll.push(this.fDiff(xl[i]))\r\n                  sum = sum+ xll[i] \r\n              }\r\n              summ.push(sum/this.rb.length)\r\n          }\r\n          const end = new Date().getTime();\r\n          console.log(end-start);\r\n           this.datacollectionl = {\r\n          labels: this.rb,\r\n          datasets: [\r\n            {\r\n              label: 'Показатели Ляпунова',\r\n              data: summ,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(139, 0, 0)',\r\n              borderWidth: 1,\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptionsl = {\r\n            responsive: true,\r\n            scales: {\r\n               yAxes: [{\r\n                gridLines: {\r\n                    display: true\r\n                },\r\n                ticks: {   \r\n                    min: -5.0,     \r\n                }\r\n                \r\n                }]\r\n            }\r\n        }\r\n      },\r\n      paintChart(){\r\n          this.chartMapping()\r\n          if(this.bifur){\r\n              this.chartBifur()\r\n          }\r\n          if(this.pokazlapuniva){\r\n            this.chartLyapunov()\r\n          }\r\n      },\r\n      async paintmapp(){\r\n           const response = await fetch(\"http://localhost:56063/api/mappingplank\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body:JSON.stringify({\r\n                    r: Number(this.kofr),\r\n                    lestlameri: this.lestlameri,\r\n                    bifur: this.bifur,\r\n                    pokazlapuniva: this.pokazlapuniva,\r\n                    login: sessionStorage.getItem(\"login\") === null ? null:sessionStorage.getItem(\"login\"),\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               console.log(Number(this.kofr) + typeof(Number(this.kofr)))\r\n           }          \r\n        }\r\n    }\r\n  \r\n}\r\n\r\n</script>\r\n\r\n"]}]}