{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappLogistic.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappLogistic.vue","mtime":1636483833096},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5saW5lLWNoYXJ0DQogIG1hcmdpbjogMjVweA0KICAmX19saW5lDQogICAgZmlsbDogbm9uZQ0KICAgIHN0cm9rZTogIzc2QkY4QQ0KICAgIHN0cm9rZS13aWR0aDogM3B4DQo="},{"version":3,"sources":["MappLogistic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA","file":"MappLogistic.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Логистическое Отображение</h1>\r\n                <b-form>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (0;4)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"0\" max=\"4\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея?</label>\r\n                            <b-form-checkbox id=\"lameria\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                </b-form>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n        <b-button></b-button>\r\n      <svg\r\n            class=\"line-chart\"\r\n            :viewBox=\"viewBox\"\r\n        >\r\n            <g transform=\"translate(0, 10)\">\r\n            <path\r\n                class=\"line-chart__line\"\r\n                :d=\"line\"\r\n            />\r\n            </g>\r\n        </svg>\r\n    </b-container>\r\n</template>\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n  name: 'LineChart',\r\n  props: {\r\n    data: {\r\n      required: true,\r\n      type: Array,\r\n    },\r\n    width: {\r\n      default: 500,\r\n      type: Number,\r\n    },\r\n    height: {\r\n      default: 270,\r\n      type: Number,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      padding: 60,\r\n    };\r\n  },\r\n  computed: {\r\n    rangeX() {\r\n      const width = this.width - this.padding;\r\n      return [0, width];\r\n    },\r\n    rangeY() {\r\n      const height = this.height - this.padding;\r\n      return [0, height];\r\n    },\r\n    path() {\r\n      const x = d3.scaleLinear().range(this.rangeX);\r\n      const y = d3.scaleLinear().range(this.rangeY);\r\n      d3.axisLeft().scale(x);\r\n      d3.axisTop().scale(y);\r\n      x.domain(d3.extent(this.data, (d, i) => i));\r\n      y.domain([0, d3.max(this.data, d => d)]);\r\n      return d3.line()\r\n        .x((d, i) => x(i))\r\n        .y(d => y(d));\r\n    },\r\n    line() {\r\n      return this.path(this.data);\r\n    },\r\n    viewBox() {\r\n      return `0 0 ${this.width} ${this.height}`;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style lang=\"sass\">\r\n.line-chart\r\n  margin: 25px\r\n  &__line\r\n    fill: none\r\n    stroke: #76BF8A\r\n    stroke-width: 3px\r\n</style>"]}]}