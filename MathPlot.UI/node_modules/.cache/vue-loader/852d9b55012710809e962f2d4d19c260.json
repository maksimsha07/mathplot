{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\Mapping\\MappPlank.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\Mapping\\MappPlank.vue","mtime":1637095074018},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MappPlank.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"MappPlank.vue","sourceRoot":"src/views/Mapping","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Отображение Планка</h1>\r\n                <b-form id=\"mappingplank\">\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (0;7)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"0\" max=\"7\" v-model=\"r\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея</label>\r\n                            <b-form-checkbox id=\"lameria\" v-model=\"lestlameri\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"bifuraks\">Построить бифуркационную диаграмму</label>\r\n                            <b-form-checkbox id=\"bifuraks\" v-model=\"bifur\"></b-form-checkbox>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lapunov\">Построить показатель Ляпунова</label>\r\n                            <b-form-checkbox id=\"lapunov\" v-model=\"pokazlapuniva\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <b-button type=\"button\" form=\"mappingplank\" variant=\"secondary\" v-on:click=\"paintChart\">Submit</b-button>\r\n                    </div>\r\n                </b-form>\r\n                <div class=\"small\">\r\n                    <line-chart :chart-data=\"datacollection\" :options=\"chartOptions\" ref='chart'/>                  \r\n                    <b-button v-if=\"datacollection != null\"  type=\"button\" variant=\"secondary\" v-on:click=\"downloadChartPng('chart')\">Скачать</b-button>\r\n                    <b-button v-if=\"datacollection != null\" type=\"button\" variant=\"secondary\" style=\"margin-left: 5px\">Сохранить</b-button>\r\n                </div>\r\n                <div class=\"small\" v-if=\"bifur\">\r\n                    <scatter-chart :chart-data=\"datacollectionb\" id=\"chartb\" ref='chartb'/>\r\n                    <b-button v-if=\"datacollectionb != null\"  type=\"button\" variant=\"secondary\" v-on:click=\"downloadChartPng('chartb')\">Скачать</b-button>\r\n                    <b-button v-if=\"datacollectionb != null\" type=\"button\" variant=\"secondary\" style=\"margin-left: 5px\">Сохранить</b-button>\r\n                </div>\r\n                <div class=\"small\" v-if=\"pokazlapuniva\">\r\n                    <line-chart :chart-data=\"datacollectionl\" :options=\"chartOptionsl\" ref='chartl'/>\r\n                    <b-button v-if=\"datacollectionl != null\"  type=\"button\" variant=\"secondary\" v-on:click=\"downloadChartPng('chartl')\">Скачать</b-button>\r\n                    <b-button v-if=\"datacollectionl != null\" type=\"button\" variant=\"secondary\" style=\"margin-left: 5px\">Сохранить</b-button>\r\n                </div>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n import LineChart from '../../components/MoreChart/LineChart.js'\r\n import ScatterChart from '../../components/MoreChart/ScatterChart.js'\r\nexport default{\r\n    components: {\r\n      LineChart,\r\n      ScatterChart,\r\n    },\r\n    data(){\r\n        return{\r\n            r: 4,\r\n            rMax:7,\r\n            rmin: 1,\r\n            xMax: 5,\r\n            xMin: 0,\r\n            lestlameri: false,\r\n            bifur: false,\r\n            pokazlapuniva: false,\r\n            datacollection: null,\r\n            datacollectionb: null,\r\n            datacollectionl: null,\r\n            chartOptions: null,\r\n            chartOptionsl: null,\r\n            x: [],\r\n            y: [],\r\n            ly: [],\r\n            rb: []        \r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n       f(x){\r\n           return (this.r*Math.pow(x,3))/(1+Math.exp(x))\r\n       },\r\n       fr(x,r){\r\n            return (r*Math.pow(x,3))/(1+Math.exp(x))\r\n       },\r\n       fDiff(x,r){\r\n           return Math.log(Math.abs((r*Math.pow(x,2)*((x-3)*Math.exp(x)-3))/(Math.pow((1+Math.exp(x)),2))))\r\n       },\r\n      chartMapping(){\r\n          this.x = []\r\n          this.y = []\r\n        for (let i = this.xMin; i < this.xMax; i = i+0.01) {\r\n           this.x.push(i.toFixed(2)) \r\n           this.y.push(this.f(i))          \r\n        }\r\n          this.datacollection = {\r\n          labels: this.x,\r\n          datasets: [\r\n            {\r\n              label: 'Отображение',\r\n              data: this.y,\r\n              fill: false,\r\n              pointRadius: 0,\r\n               borderColor: 'rgb(139, 0, 0)'\r\n            }, {\r\n              label: 'y=x',\r\n              data: this.x,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(0, 0, 0)'\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptions = {\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                    min: this.x[0],\r\n                    max: this.x[this.x.length-1],\r\n                    ticks: {\r\n                        stepSize: 0.5\r\n                    }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n      },\r\n      chartBifur(){\r\n        this.rb = []\r\n        for (let i = this.rmin; i < this.rMax; i = i+0.01) {\r\n            this.rb.push(i.toFixed(2))           \r\n        }\r\n        var rdn = this.rb[Math.floor(Math.random()*this.rb.length)]\r\n        const nn = this.rb.length\r\n        var xx = []\r\n        var datas = [{x:1,y:1}]\r\n        for (let k = 0; k < nn;k++) {\r\n            xx = [rdn]\r\n            for (let n = 0; n < nn-1; n++) {\r\n                xx.push(this.fr(xx[n],this.rb[k]))\r\n                if(n>nn-20){\r\n                    datas.push({x:this.rb[k],y:xx[xx.length-1]})\r\n                }\r\n            }\r\n            \r\n        }\r\n         this.datacollectionb = {\r\n            datasets: [{\r\n                data: datas,\r\n                label: \"Бифуракционная Диаграмма\",\r\n                borderColor: 'rgb(139, 0, 0)',\r\n                backgroundColor: 'rgb(139, 0, 0)',\r\n                pointRadius: 1\r\n            }]\r\n        }\r\n      },\r\n      chartLyapunov(){\r\n          const start= new Date().getTime();\r\n          this.rb = []\r\n          for (let i = this.rmin; i < this.rMax; i = i+0.01) {\r\n            this.rb.push(i.toFixed(2))           \r\n         } \r\n          var summ = [] \r\n          for (let j = 0; j < this.rb.length; j++) {\r\n              var sum = 0\r\n              var xl = [2.0]\r\n              var xll = []\r\n              for (let i = 0; i < this.rb.length-1; i++) {\r\n                  xl.push(this.fr(xl[i],this.rb[j]))\r\n                  xll.push(this.fDiff(xl[i],this.rb[j]))\r\n                  sum = sum+ xll[i] \r\n              }\r\n              summ.push(sum/this.rb.length)\r\n          }\r\n          console.log(xl)\r\n          console.log(xll)\r\n          const end = new Date().getTime();\r\n          console.log(end-start);\r\n           this.datacollectionl = {\r\n          labels: this.rb,\r\n          datasets: [\r\n            {\r\n              label: 'Показатели Ляпунова',\r\n              data: summ,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(139, 0, 0)',\r\n              borderWidth: 1,\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptionsl = {\r\n            responsive: true,\r\n            scales: {\r\n               yAxes: [{\r\n                gridLines: {\r\n                    display: true\r\n                },\r\n                ticks: {   \r\n                    min: -1,     \r\n                }\r\n                \r\n                }]\r\n            }\r\n        }\r\n      },\r\n       paintChart(){\r\n        this.chartMapping()\r\n          if(this.bifur){\r\n              this.chartBifur()\r\n          }\r\n          if(this.pokazlapuniva){\r\n            this.chartLyapunov()\r\n          }\r\n      },\r\n      downloadChartPng(ref){\r\n        const component = this.$refs[ref] \r\n        const canvas = component.$refs.canvas\r\n        var dataURL = canvas.toDataURL(\"image/png\")\r\n        var link = document.createElement(\"a\")\r\n        link.href = dataURL\r\n        link.download = \"my-image-name.png\";\r\n        link.click();\r\n      },\r\n      async paintmapp(){\r\n           const response = await fetch(\"http://localhost:56063/api/mappingplank\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body:JSON.stringify({\r\n                    r: Number(this.kofr),\r\n                    lestlameri: this.lestlameri,\r\n                    bifur: this.bifur,\r\n                    pokazlapuniva: this.pokazlapuniva,\r\n                    login: sessionStorage.getItem(\"login\") === null ? null:sessionStorage.getItem(\"login\"),\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               console.log(Number(this.kofr) + typeof(Number(this.kofr)))\r\n           }          \r\n        }\r\n    }\r\n  \r\n}\r\n\r\n</script>\r\n\r\n"]}]}