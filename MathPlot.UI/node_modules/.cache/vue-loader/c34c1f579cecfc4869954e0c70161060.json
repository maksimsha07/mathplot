{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue","mtime":1636480314526},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiBpbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4uL2NvbXBvbmVudHMvTGluZUNoYXJ0LmpzJwogaW1wb3J0IFNjYXR0ZXJDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL1NjYXR0ZXJDaGFydC5qcycKIGltcG9ydCBDaGFydCBmcm9tICdjaGFydC5qcyc7CmV4cG9ydCBkZWZhdWx0ewogICAgY29tcG9uZW50czogewogICAgICBDaGFydAogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIHI6IDAuOCwKICAgICAgICAgICAgbGVzdGxhbWVyaTogZmFsc2UsCiAgICAgICAgICAgIGJpZnVyOiBmYWxzZSwKICAgICAgICAgICAgcG9rYXpsYXB1bml2YTogZmFsc2UsCiAgICAgICAgICAgIGRhdGFjb2xsZWN0aW9uOiBudWxsLAogICAgICAgICAgICBkYXRhY29sbGVjdGlvbmI6IG51bGwsCiAgICAgICAgICAgIGRhdGFjb2xsZWN0aW9ubDogbnVsbCwKICAgICAgICAgICAgeDogW10sCiAgICAgICAgICAgIHk6IFtdLAogICAgICAgICAgICBseTogW10sCiAgICAgICAgICAgIHJiOiBbXSAgICAgICAgCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQgKCkgewogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgIGYoeCl7CiAgICAgICAgICAgcmV0dXJuIHRoaXMucipNYXRoLnNpbihNYXRoLlBJKngpCiAgICAgICB9LAogICAgICBnZXRSYW5kb21JbnQgKCkgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoNTAgLSA1ICsgMSkpICsgNQogICAgICB9LAogICAgICBjaGFydE1hcHBpbmcoKXsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE7IGkgPSBpKzAuMDEpIHsKICAgICAgICAgICB0aGlzLngucHVzaChpKSAKICAgICAgICAgICB0aGlzLnkucHVzaCh0aGlzLmYoaSkpICAgICAgICAgIAogICAgICAgIH0KICAgICAgICAgIHRoaXMuZGF0YWNvbGxlY3Rpb24gPSB7CiAgICAgICAgICBsYWJlbHM6IHRoaXMueCwKICAgICAgICAgIGRhdGFzZXRzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBsYWJlbDogJ9Ce0YLQvtCx0YDQsNC20LXQvdC40LUnLAogICAgICAgICAgICAgIGRhdGE6IHRoaXMueSwKICAgICAgICAgICAgICBmaWxsOiBmYWxzZQogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbGFiZWw6ICd5PXgnLAogICAgICAgICAgICAgIGRhdGE6IHRoaXMueCwKICAgICAgICAgICAgICBmaWxsOiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICBjaGFydEJpZnVyKCl7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxOyBpID0gaSswLjAwNSkgewogICAgICAgICAgICB0aGlzLnJiLnB1c2goaSkgICAgICAgICAgIAogICAgICAgIH0KICAgICAgICB2YXIgcmRuID0gdGhpcy5yYltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdGhpcy5yYi5sZW5ndGgpXQogICAgICAgIGNvbnN0IG5uID0gdGhpcy5yYi5sZW5ndGgKICAgICAgICB2YXIgeHggPSBbXQogICAgICAgIHZhciBkYXRhcyA9IFt7eDowLHk6MH1dCiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBubjtrKyspIHsKICAgICAgICAgICAgeHggPSBbcmRuXQogICAgICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IG5uLTE7IG4rKykgewogICAgICAgICAgICAgICAgeHgucHVzaCh0aGlzLnJiW2tdKk1hdGguc2luKE1hdGguUEkqeHhbbl0pKQogICAgICAgICAgICAgICAgaWYobj5ubi0yMCl7CiAgICAgICAgICAgICAgICAgICAgZGF0YXMucHVzaCh7eDp0aGlzLnJiW2tdLHk6eHhbeHgubGVuZ3RoLTFdfSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICB9CiAgICAgICAgIHRoaXMuZGF0YWNvbGxlY3Rpb25iID0gewogICAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgICAgIGxhYmVsczogJ9CR0LjRhNGD0YDQutCw0YTQuNC+0L3QvdCw0Y8g0LTQuNCw0LPRgNCw0LzQvNCwJywKICAgICAgICAgICAgICAgIGRhdGE6IGRhdGFzCiAgICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9LAogICAgICBjaGFydEx5YXB1bm92KCl7CgogICAgICB9LAogICAgICBwYWludENoYXJ0KCl7CiAgICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gbnVsbAogICAgICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbmIgPSBudWxsCiAgICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9ubCA9IG51bGwKICAgICAgICAgIHRoaXMuY2hhcnRNYXBwaW5nKCkKICAgICAgICAgIGlmKHRoaXMuYmlmdXIpewogICAgICAgICAgICAgIHRoaXMuY2hhcnRCaWZ1cigpCiAgICAgICAgICB9CiAgICAgICAgICBpZih0aGlzLnBva2F6bGFwdW5pdmEpewogICAgICAgICAgICB0aGlzLmNoYXJ0THlhcHVub3YoKQogICAgICAgICAgfQogICAgICB9LAogICAgICBhc3luYyBwYWludG1hcHAoKXsKICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjU2MDYzL2FwaS9tYXBwaW5ncGxhbmsiLAogICAgICAgICAgIHsKICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgIGhlYWRlcnM6IHsiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iLCAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24ifSwKICAgICAgICAgICAgICAgYm9keTpKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgcjogTnVtYmVyKHRoaXMua29mciksCiAgICAgICAgICAgICAgICAgICAgbGVzdGxhbWVyaTogdGhpcy5sZXN0bGFtZXJpLAogICAgICAgICAgICAgICAgICAgIGJpZnVyOiB0aGlzLmJpZnVyLAogICAgICAgICAgICAgICAgICAgIHBva2F6bGFwdW5pdmE6IHRoaXMucG9rYXpsYXB1bml2YSwKICAgICAgICAgICAgICAgICAgICBsb2dpbjogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW4iKSA9PT0gbnVsbCA/IG51bGw6c2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW4iKSwKICAgICAgICAgICAgICAgfSkKICAgICAgICAgICB9KTsKICAgICAgICAgICBpZihyZXNwb25zZS5vayA9PT0gdHJ1ZSl7CiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmpzb24oKSk7CiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKE51bWJlcih0aGlzLmtvZnIpICsgdHlwZW9mKE51bWJlcih0aGlzLmtvZnIpKSkKICAgICAgICAgICB9ICAgICAgICAgIAogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aGlzLl9jaGFydC5kZXN0cm95KCk7CiAgICAgICAgICAgIC8vdGhpcy5yZW5kZXJDaGFydCh0aGlzLmRhdGEsIHRoaXMub3B0aW9ucyk7CiAgICAgICAgICAgIHRoaXMucmVuZGVyTGluZUNoYXJ0KCk7CiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["MappPlank.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"MappPlank.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Отображение Планка</h1>\r\n                <b-form id=\"mappingplank\">\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (0;7)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"0\" max=\"7\" v-model=\"r\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея</label>\r\n                            <b-form-checkbox id=\"lameria\" v-model=\"lestlameri\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"bifuraks\">Построить бифуркационную диаграмму</label>\r\n                            <b-form-checkbox id=\"bifuraks\" v-model=\"bifur\"></b-form-checkbox>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lapunov\">Построить показатель Ляпунова</label>\r\n                            <b-form-checkbox id=\"lapunov\" v-model=\"pokazlapuniva\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <b-button type=\"button\" form=\"mappingplank\" variant=\"secondary\" v-on:click=\"paintChart\">Submit</b-button>\r\n                    </div>\r\n                </b-form>\r\n                <div class=\"small\">\r\n                    <line-chart :chart-data=\"datacollection\" v-on=\"destroy\"></line-chart>\r\n                </div>\r\n                <div class=\"small\" v-if=\"bifur\">\r\n                    <scatter-chart :chart-data=\"datacollectionb\"></scatter-chart>\r\n                </div>\r\n                <div class=\"small\" v-if=\"pokazlapuniva\">\r\n                    <line-chart :chart-data=\"datacollectionl\"></line-chart>\r\n                </div>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n import LineChart from '../components/LineChart.js'\r\n import ScatterChart from '../components/ScatterChart.js'\r\n import Chart from 'chart.js';\r\nexport default{\r\n    components: {\r\n      Chart\r\n    },\r\n    data(){\r\n        return{\r\n            r: 0.8,\r\n            lestlameri: false,\r\n            bifur: false,\r\n            pokazlapuniva: false,\r\n            datacollection: null,\r\n            datacollectionb: null,\r\n            datacollectionl: null,\r\n            x: [],\r\n            y: [],\r\n            ly: [],\r\n            rb: []        \r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n       f(x){\r\n           return this.r*Math.sin(Math.PI*x)\r\n       },\r\n      getRandomInt () {\r\n        return Math.floor(Math.random() * (50 - 5 + 1)) + 5\r\n      },\r\n      chartMapping(){\r\n        for (let i = 0; i < 1; i = i+0.01) {\r\n           this.x.push(i) \r\n           this.y.push(this.f(i))          \r\n        }\r\n          this.datacollection = {\r\n          labels: this.x,\r\n          datasets: [\r\n            {\r\n              label: 'Отображение',\r\n              data: this.y,\r\n              fill: false\r\n            }, {\r\n              label: 'y=x',\r\n              data: this.x,\r\n              fill: false\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      chartBifur(){\r\n        for (let i = 0; i < 1; i = i+0.005) {\r\n            this.rb.push(i)           \r\n        }\r\n        var rdn = this.rb[Math.floor(Math.random()*this.rb.length)]\r\n        const nn = this.rb.length\r\n        var xx = []\r\n        var datas = [{x:0,y:0}]\r\n        for (let k = 0; k < nn;k++) {\r\n            xx = [rdn]\r\n            for (let n = 0; n < nn-1; n++) {\r\n                xx.push(this.rb[k]*Math.sin(Math.PI*xx[n]))\r\n                if(n>nn-20){\r\n                    datas.push({x:this.rb[k],y:xx[xx.length-1]})\r\n                }\r\n            }\r\n            \r\n        }\r\n         this.datacollectionb = {\r\n            datasets: [{\r\n                labels: 'Бифуркафионная диаграмма',\r\n                data: datas\r\n            }]\r\n        }\r\n      },\r\n      chartLyapunov(){\r\n\r\n      },\r\n      paintChart(){\r\n          this.datacollection = null\r\n          this.datacollectionb = null\r\n          this.datacollectionl = null\r\n          this.chartMapping()\r\n          if(this.bifur){\r\n              this.chartBifur()\r\n          }\r\n          if(this.pokazlapuniva){\r\n            this.chartLyapunov()\r\n          }\r\n      },\r\n      async paintmapp(){\r\n           const response = await fetch(\"http://localhost:56063/api/mappingplank\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body:JSON.stringify({\r\n                    r: Number(this.kofr),\r\n                    lestlameri: this.lestlameri,\r\n                    bifur: this.bifur,\r\n                    pokazlapuniva: this.pokazlapuniva,\r\n                    login: sessionStorage.getItem(\"login\") === null ? null:sessionStorage.getItem(\"login\"),\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               console.log(Number(this.kofr) + typeof(Number(this.kofr)))\r\n           }          \r\n        }\r\n    },\r\n    watch: {\r\n        data: function() {\r\n            this._chart.destroy();\r\n            //this.renderChart(this.data, this.options);\r\n            this.renderLineChart();\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]}]}