{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\components\\app\\header.vue?vue&type=template&id=08d48acb&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\components\\app\\header.vue","mtime":1637138170285},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQo8ZGl2Pg0KICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciI+DQogICAgICAgICAgICA8Yi1uYXZiYXIgdHlwZT0iZGFyayIgdmFyaWFudD0iaW5mbyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgICAgICAgICAgPGItbmF2YmFyLWJyYW5kIGhyZWY9IiMiIHN0eWxlPSJtYXJnaW4tbGVmdDogNXB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIuLi8uLi9hc3NldHMvZnVuY3Rpb24ucG5nIiB3aWR0aD0iMzAiIGhlaWdodD0iMzAiIGNsYXNzPSJkLWlubGluZS1ibG9jayBhbGlnbi10b3AiIGFsdD0iRnVuYyI+DQogICAgICAgICAgICAgICAgICAgICAgICBNYXRoUGxvdA0KICAgICAgICAgICAgICAgICAgICA8L2ItbmF2YmFyLWJyYW5kPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biB0ZXh0PSLQk9GA0LDRhNC40LrQuCIgcmlnaHQgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZSIgPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyb3V0ZXItbGluaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSJsaW5rIGluIGxpbmtzZ3JhZiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJsaW5rLnVybCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWc9ImxpIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp0bz0ibGluay51cmwiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGhyZWY9InRvIiBpZD0iZnVuY3Rpb25zTGF5b3V0cyI+e3tsaW5rLnRpdGxlfX08L2ItZHJvcGRvd24taXRlbT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gdGV4dD0i0KLQtdC+0YDQuNGPIiBzdHlsZT0ibGlzdC1zdHlsZS10eXBlOiBub25lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0ibGluayBpbiBsaW5rc3RoZW9yeSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJsaW5rLnVybCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWc9ImxpIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp0bz0ibGluay51cmwiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGhyZWY9InRvIiBpZD0iZnVuY3Rpb25zTGF5b3V0cyI+e3tsaW5rLnRpdGxlfX08L2ItZHJvcGRvd24taXRlbT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iYXV0b3JpemUgPT09IGZhbHNlIiBjbGFzcz0iZC1mbGV4Ij4gICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gQGNsaWNrPSIkYnZNb2RhbC5zaG93KCdyZWdpc3RyYXRpb25zTW9kYWwnKSIgdHlwZT0iYnV0dG9uIiBpZD0iYnV0dG9uU2luZyIgdmFyaWFudD0ic2Vjb25kYXJ5Ij5TaW5nIHVwPC9iLWJ1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24gQGNsaWNrPSIkYnZNb2RhbC5zaG93KCdhdXRoTW9kYWwnKSIgdHlwZT0iYnV0dG9uIiB2YXJpYW50PSJzZWNvbmRhcnkiIHN0eWxlPSJtYXJnaW46IDBweCA1cHggMHB4IDVweCI+U2luZyBpbjwvYi1idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iYXV0b3JpemUgPT09IHRydWUiIGNsYXNzPSJkLWZsZXgiPiAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbiB0eXBlID0ic3VibWl0IiB2YXJpYW50PSJzZWNvbmRhcnkiIHYtb246Y2xpY2s9ImxvZ291dHMiPkxvZ291dDwvYi1idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSBkcm9wZG93bi10b2dnbGUiIGhyZWY9IiMiIHJvbGU9ImJ1dHRvbiIgaWQ9ImRyb3Bkb3duTWVudUxpbmsiIGRhdGEtYnMtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEcm9wZG93biBsaW5rDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51IiBhcmlhLWxhYmVsbGVkYnk9ImRyb3Bkb3duTWVudUxpbmsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9IiMiPkFjdGlvbjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9IiMiPkFub3RoZXIgYWN0aW9uPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iIyI+U29tZXRoaW5nIGVsc2UgaGVyZTwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gcmlnaHQgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZz0ibGkiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvPSIvUHJvZmlsZSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGhyZWY9InRvIj7Qn9GA0L7RhNC40LvRjDwvYi1kcm9wZG93bi1pdGVtPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcm91dGVyLWxpbms+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2ItbmF2YmFyPg0KICAgIDwvaGVhZGVyPg0KDQogICAgPCEtLSBNb2RhbCBTaW5nIFVQIC0tPg0KICAgIDxiLW1vZGFsDQogICAgICAgIGlkID0icmVnaXN0cmF0aW9uc01vZGFsIg0KICAgICAgICByZWYgPSAibW9kYWwiDQogICAgICAgIHRpdGxlPSJTaW5nIFVwIg0KICAgICAgICBoaWRlLWZvb3Rlcg0KICAgICAgICA+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBvdmVyZmxvdy1oaWRkZW4iPg0KICAgICAgICAgICAgPGRpdiBpZD0iZXJyb3JzIiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIiBzdHlsZT0iZGlzcGxheTpub25lOyI+PC9kaXY+DQogICAgICAgICAgICA8Zm9ybSBpZD0icmVnaXN0cmF0aW9uRm9ybSIgQHN1Ym1pdC5wcmV2ZW50ID0gInJlZ2lzdGVyQ2xpY2siPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgcm93ICI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLW1kLTYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icmVnaXN0cmF0aW9uSW5wdXRGaXJzdE5hbWUiPkZpcnN0TmFtZTwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgdi1tb2RlbD0iRmlyc3ROYW1lIiBpZD0icmVnaXN0cmF0aW9uSW5wdXRGaXJzdE5hbWUiIHBsYWNlaG9sZGVyPSJFbnRlciBGaXJzdE5hbWUiPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wtbWQtNiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJyZWdpc3RyYXRpb25JbnB1dExhc3ROYW1lIj5MYXN0TmFtZTwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgdi1tb2RlbD0iTGFzdE5hbWUiIGlkPSJyZWdpc3RyYXRpb25JbnB1dExhc3ROYW1lIiBwbGFjZWhvbGRlcj0iRW50ZXIgTGFzdE5hbWUiPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIiBpZD0ibW9kYWxyb3dzaXplIj4NCiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icmVnaXN0cmF0aW9uSW5wdXRMb2dpbiI+TG9naW48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iTG9naW4iIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHYtbW9kZWw9IkxvZ2luIiBpZD0icmVnaXN0cmF0aW9uSW5wdXRMb2dpbiIgcGxhY2Vob2xkZXI9IkVudGVyIExvZ2luIj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIHJvdyIgaWQ9Im1vZGFscm93c2l6ZSI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLW1kLTYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iY29sLWZvcm0tbGFiZWwgY29sLXNtLTIgcHQtMCI+R2VucmVzPC9sZWdlbmQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIHJvdyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayBjb2wtbWQtNiIgc3R5bGU9Im1hcmdpbi1sZWZ0OjE1cHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiIHR5cGU9InJhZGlvIiBuYW1lPSJJc01hbGUiIGlkPSJyZWdpc3RyYXRpb25SYWRpb01hbGUiIHZhbHVlPSJ0cnVlIiAgdi1tb2RlbD0iR2VucmUiIGNoZWNrZWQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1jaGVjay1sYWJlbCIgZm9yPSJyZWdpc3RyYXRpb25SYWRpb01hbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tY2hlY2sgY29sLW1kLTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiIHR5cGU9InJhZGlvIiBuYW1lPSJJc01hbGUiIGlkPSJyZWdpc3RyYXRpb25SYWRpb0ZlbWFsZSIgdmFsdWU9ImZhbHNlIiAgdi1tb2RlbD0iR2VucmUiICBjaGVja2VkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiIGZvcj0iIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZlbWFsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgcm93IiBpZD0ibW9kYWxyb3dzaXplIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wtbWQtNiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJyZWdpc3RyYXRpb25JbnB1dEVtYWlsIj5FbWFpbCBBZGRyZXNzPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJFbWFpbCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InJlZ2lzdHJhdGlvbklucHV0RW1haWwiIHYtbW9kZWw9IkVtYWlsIiAgcGxhY2Vob2xkZXI9IkVudGVyIGVtYWlsIj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLW1kLTYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icmVnaXN0cmF0aW9uSW5wdXRUZWxlcGhvbmUiPlBob25lIE51bWJlcjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iUGhvbmUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJyZWdpc3RyYXRpb25JbnB1dFRlbGVwaG9uZSIgIHYtbW9kZWw9IlBob25lIj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCByb3ciIGlkPSJtb2RhbHJvd3NpemUiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC1tZC02Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJlZ2lzdHJhdGlvbklucHV0UGFzc3dvcmQiPlBhc3N3b3JkPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJQYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InJlZ2lzdHJhdGlvbklucHV0UGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJFbnRlciBQYXNzd29yZCIgIHYtbW9kZWw9IlBhc3N3b3JkIiA+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC1tZC02Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJlZ2lzdHJhdGlvbklucHV0UGFzc3dvcmRSZXR1cm4iPlBhc3N3b3JkPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJQYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InJlZ2lzdHJhdGlvbklucHV0UGFzc3dvcmRSZXR1cm4iIHBsYWNlaG9sZGVyPSJFbnRlciBQYXNzd29yZCI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgICAgICAgPGItYnV0dG9uIHR5cGU9InN1Ym1pdCIgZm9ybT0icmVnaXN0cmF0aW9uRm9ybSIgdmFyaWFudD0ic2Vjb25kYXJ5Ij5TdWJtaXQ8L2ItYnV0dG9uPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgPC9iLW1vZGFsPg0KICAgIDwhLS1Nb2RhbCBTaW5nIFVwLS0+DQogICAgPCEtLSBNb2RhbCBTaW5nIElOIC0tPg0KICAgICA8Yi1tb2RhbA0KICAgICAgICBpZCA9ImF1dGhNb2RhbCINCiAgICAgICAgcmVmID0gIm1vZGFsIg0KICAgICAgICB0aXRsZT0iU2luZyBpbiINCiAgICAgICAgaGlkZS1mb290ZXINCiAgICAgICAgPg0KICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIG92ZXJmbG93LWhpZGRlbiI+DQogICAgICAgICAgICAgICAgPGZvcm0gaWQ9ImF1dGhGb3JtIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJhdXRoSW5wdXRFbWFpbCI+TG9naW48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9IkxvZ2luIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iYXV0aElucHV0RW1haWwiIHBsYWNlaG9sZGVyPSJFbnRlciBMb2dpbiIgdi1tb2RlbD0iTG9naW4iPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCIgaWQ9Im1vZGFscm93c2l6ZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJhdXRoSW5wdXRQYXNzd29yZCI+UGFzc3dvcmQ8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9IlBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iYXV0aElucHV0UGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJFbnRlciBQYXNzd29yZCIgdi1tb2RlbD0iUGFzc3dvcmQiPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgICAgICAgPGItYnV0dG9uIHR5cGU9ImJ1dHRvbiIgZm9ybT0iYXV0aEZvcm0iIHZhcmlhbnQ9InNlY29uZGFyeSIgdi1vbjpjbGljaz0iZ2V0VG9rZW5Bc3luYyI+U3VibWl0PC9iLWJ1dHRvbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICA8L2ItbW9kYWw+DQo8L2Rpdj4NCg=="},null]}