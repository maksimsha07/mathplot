{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\Home.vue","mtime":1638211405383},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}