{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue","mtime":1636480301493},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiQzovVXNlcnMvQWRtaW4vc291cmNlL3JlcG9zL01hdGhQbG90L01hdGhQbG90L21hdGhwbG90LnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvQWRtaW4vc291cmNlL3JlcG9zL01hdGhQbG90L01hdGhQbG90L21hdGhwbG90LnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IExpbmVDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL0xpbmVDaGFydC5qcyc7CmltcG9ydCBTY2F0dGVyQ2hhcnQgZnJvbSAnLi4vY29tcG9uZW50cy9TY2F0dGVyQ2hhcnQuanMnOwppbXBvcnQgQ2hhcnQgZnJvbSAnY2hhcnQuanMvYXV0byc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDaGFydDogQ2hhcnQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByOiAwLjgsCiAgICAgIGxlc3RsYW1lcmk6IGZhbHNlLAogICAgICBiaWZ1cjogZmFsc2UsCiAgICAgIHBva2F6bGFwdW5pdmE6IGZhbHNlLAogICAgICBkYXRhY29sbGVjdGlvbjogbnVsbCwKICAgICAgZGF0YWNvbGxlY3Rpb25iOiBudWxsLAogICAgICBkYXRhY29sbGVjdGlvbmw6IG51bGwsCiAgICAgIHg6IFtdLAogICAgICB5OiBbXSwKICAgICAgbHk6IFtdLAogICAgICByYjogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgbWV0aG9kczogewogICAgZjogZnVuY3Rpb24gZih4KSB7CiAgICAgIHJldHVybiB0aGlzLnIgKiBNYXRoLnNpbihNYXRoLlBJICogeCk7CiAgICB9LAogICAgZ2V0UmFuZG9tSW50OiBmdW5jdGlvbiBnZXRSYW5kb21JbnQoKSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoNTAgLSA1ICsgMSkpICsgNTsKICAgIH0sCiAgICBjaGFydE1hcHBpbmc6IGZ1bmN0aW9uIGNoYXJ0TWFwcGluZygpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxOyBpID0gaSArIDAuMDEpIHsKICAgICAgICB0aGlzLngucHVzaChpKTsKICAgICAgICB0aGlzLnkucHVzaCh0aGlzLmYoaSkpOwogICAgICB9CgogICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gewogICAgICAgIGxhYmVsczogdGhpcy54LAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgbGFiZWw6ICfQntGC0L7QsdGA0LDQttC10L3QuNC1JywKICAgICAgICAgIGRhdGE6IHRoaXMueSwKICAgICAgICAgIGZpbGw6IGZhbHNlCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICd5PXgnLAogICAgICAgICAgZGF0YTogdGhpcy54LAogICAgICAgICAgZmlsbDogZmFsc2UKICAgICAgICB9XQogICAgICB9OwogICAgfSwKICAgIGNoYXJ0QmlmdXI6IGZ1bmN0aW9uIGNoYXJ0QmlmdXIoKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTsgaSA9IGkgKyAwLjAwNSkgewogICAgICAgIHRoaXMucmIucHVzaChpKTsKICAgICAgfQoKICAgICAgdmFyIHJkbiA9IHRoaXMucmJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYi5sZW5ndGgpXTsKICAgICAgdmFyIG5uID0gdGhpcy5yYi5sZW5ndGg7CiAgICAgIHZhciB4eCA9IFtdOwogICAgICB2YXIgZGF0YXMgPSBbewogICAgICAgIHg6IDAsCiAgICAgICAgeTogMAogICAgICB9XTsKCiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbm47IGsrKykgewogICAgICAgIHh4ID0gW3Jkbl07CgogICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgbm4gLSAxOyBuKyspIHsKICAgICAgICAgIHh4LnB1c2godGhpcy5yYltrXSAqIE1hdGguc2luKE1hdGguUEkgKiB4eFtuXSkpOwoKICAgICAgICAgIGlmIChuID4gbm4gLSAyMCkgewogICAgICAgICAgICBkYXRhcy5wdXNoKHsKICAgICAgICAgICAgICB4OiB0aGlzLnJiW2tdLAogICAgICAgICAgICAgIHk6IHh4W3h4Lmxlbmd0aCAtIDFdCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbmIgPSB7CiAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICBsYWJlbHM6ICfQkdC40YTRg9GA0LrQsNGE0LjQvtC90L3QsNGPINC00LjQsNCz0YDQsNC80LzQsCcsCiAgICAgICAgICBkYXRhOiBkYXRhcwogICAgICAgIH1dCiAgICAgIH07CiAgICB9LAogICAgY2hhcnRMeWFwdW5vdjogZnVuY3Rpb24gY2hhcnRMeWFwdW5vdigpIHt9LAogICAgcGFpbnRDaGFydDogZnVuY3Rpb24gcGFpbnRDaGFydCgpIHsKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IG51bGw7CiAgICAgIHRoaXMuZGF0YWNvbGxlY3Rpb25iID0gbnVsbDsKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbmwgPSBudWxsOwogICAgICB0aGlzLmNoYXJ0TWFwcGluZygpOwoKICAgICAgaWYgKHRoaXMuYmlmdXIpIHsKICAgICAgICB0aGlzLmNoYXJ0QmlmdXIoKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucG9rYXpsYXB1bml2YSkgewogICAgICAgIHRoaXMuY2hhcnRMeWFwdW5vdigpOwogICAgICB9CiAgICB9LAogICAgcGFpbnRtYXBwOiBmdW5jdGlvbiBwYWludG1hcHAoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo1NjA2My9hcGkvbWFwcGluZ3BsYW5rIiwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgcjogTnVtYmVyKF90aGlzLmtvZnIpLAogICAgICAgICAgICAgICAgICAgIGxlc3RsYW1lcmk6IF90aGlzLmxlc3RsYW1lcmksCiAgICAgICAgICAgICAgICAgICAgYmlmdXI6IF90aGlzLmJpZnVyLAogICAgICAgICAgICAgICAgICAgIHBva2F6bGFwdW5pdmE6IF90aGlzLnBva2F6bGFwdW5pdmEsCiAgICAgICAgICAgICAgICAgICAgbG9naW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImxvZ2luIikgPT09IG51bGwgPyBudWxsIDogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW4iKQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uub2sgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuanNvbigpKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coTnVtYmVyKF90aGlzLmtvZnIpICsgX3R5cGVvZihOdW1iZXIoX3RoaXMua29mcikpKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICAgIHRoaXMuX2NoYXJ0LmRlc3Ryb3koKTsgLy90aGlzLnJlbmRlckNoYXJ0KHRoaXMuZGF0YSwgdGhpcy5vcHRpb25zKTsKCgogICAgICB0aGlzLnJlbmRlckxpbmVDaGFydCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MappPlank.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Отображение Планка</h1>\r\n                <b-form id=\"mappingplank\">\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (0;7)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"0\" max=\"7\" v-model=\"r\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея</label>\r\n                            <b-form-checkbox id=\"lameria\" v-model=\"lestlameri\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"bifuraks\">Построить бифуркационную диаграмму</label>\r\n                            <b-form-checkbox id=\"bifuraks\" v-model=\"bifur\"></b-form-checkbox>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lapunov\">Построить показатель Ляпунова</label>\r\n                            <b-form-checkbox id=\"lapunov\" v-model=\"pokazlapuniva\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <b-button type=\"button\" form=\"mappingplank\" variant=\"secondary\" v-on:click=\"paintChart\">Submit</b-button>\r\n                    </div>\r\n                </b-form>\r\n                <div class=\"small\">\r\n                    <line-chart :chart-data=\"datacollection\" v-on=\"destroy\"></line-chart>\r\n                </div>\r\n                <div class=\"small\" v-if=\"bifur\">\r\n                    <scatter-chart :chart-data=\"datacollectionb\"></scatter-chart>\r\n                </div>\r\n                <div class=\"small\" v-if=\"pokazlapuniva\">\r\n                    <line-chart :chart-data=\"datacollectionl\"></line-chart>\r\n                </div>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n import LineChart from '../components/LineChart.js'\r\n import ScatterChart from '../components/ScatterChart.js'\r\n import Chart from 'chart.js/auto';\r\nexport default{\r\n    components: {\r\n      Chart\r\n    },\r\n    data(){\r\n        return{\r\n            r: 0.8,\r\n            lestlameri: false,\r\n            bifur: false,\r\n            pokazlapuniva: false,\r\n            datacollection: null,\r\n            datacollectionb: null,\r\n            datacollectionl: null,\r\n            x: [],\r\n            y: [],\r\n            ly: [],\r\n            rb: []        \r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n       f(x){\r\n           return this.r*Math.sin(Math.PI*x)\r\n       },\r\n      getRandomInt () {\r\n        return Math.floor(Math.random() * (50 - 5 + 1)) + 5\r\n      },\r\n      chartMapping(){\r\n        for (let i = 0; i < 1; i = i+0.01) {\r\n           this.x.push(i) \r\n           this.y.push(this.f(i))          \r\n        }\r\n          this.datacollection = {\r\n          labels: this.x,\r\n          datasets: [\r\n            {\r\n              label: 'Отображение',\r\n              data: this.y,\r\n              fill: false\r\n            }, {\r\n              label: 'y=x',\r\n              data: this.x,\r\n              fill: false\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      chartBifur(){\r\n        for (let i = 0; i < 1; i = i+0.005) {\r\n            this.rb.push(i)           \r\n        }\r\n        var rdn = this.rb[Math.floor(Math.random()*this.rb.length)]\r\n        const nn = this.rb.length\r\n        var xx = []\r\n        var datas = [{x:0,y:0}]\r\n        for (let k = 0; k < nn;k++) {\r\n            xx = [rdn]\r\n            for (let n = 0; n < nn-1; n++) {\r\n                xx.push(this.rb[k]*Math.sin(Math.PI*xx[n]))\r\n                if(n>nn-20){\r\n                    datas.push({x:this.rb[k],y:xx[xx.length-1]})\r\n                }\r\n            }\r\n            \r\n        }\r\n         this.datacollectionb = {\r\n            datasets: [{\r\n                labels: 'Бифуркафионная диаграмма',\r\n                data: datas\r\n            }]\r\n        }\r\n      },\r\n      chartLyapunov(){\r\n\r\n      },\r\n      paintChart(){\r\n          this.datacollection = null\r\n          this.datacollectionb = null\r\n          this.datacollectionl = null\r\n          this.chartMapping()\r\n          if(this.bifur){\r\n              this.chartBifur()\r\n          }\r\n          if(this.pokazlapuniva){\r\n            this.chartLyapunov()\r\n          }\r\n      },\r\n      async paintmapp(){\r\n           const response = await fetch(\"http://localhost:56063/api/mappingplank\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body:JSON.stringify({\r\n                    r: Number(this.kofr),\r\n                    lestlameri: this.lestlameri,\r\n                    bifur: this.bifur,\r\n                    pokazlapuniva: this.pokazlapuniva,\r\n                    login: sessionStorage.getItem(\"login\") === null ? null:sessionStorage.getItem(\"login\"),\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               console.log(Number(this.kofr) + typeof(Number(this.kofr)))\r\n           }          \r\n        }\r\n    },\r\n    watch: {\r\n        data: function() {\r\n            this._chart.destroy();\r\n            //this.renderChart(this.data, this.options);\r\n            this.renderLineChart();\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"],"sourceRoot":"src/views"}]}