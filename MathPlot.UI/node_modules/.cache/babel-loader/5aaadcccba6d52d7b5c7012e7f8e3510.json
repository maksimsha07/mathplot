{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\TheoryLogistic.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\TheoryLogistic.vue","mtime":1635946411236},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0FkbWluL3NvdXJjZS9yZXBvcy9NYXRoUGxvdC9NYXRoUGxvdC9tYXRocGxvdC51aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbW1lbnQ6ICIiLAogICAgICBwYWdlTmFtZTogIlRoZW9yeUxvZ2lzdGljIiwKICAgICAgYXV0b3JpemU6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImFjY2Vzc1Rva2VuIikgPT09IG51bGwgPyBmYWxzZSA6IHRydWUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRDb21tZW50OiBmdW5jdGlvbiBhZGRDb21tZW50KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIHAsIGVycm9yRGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo1NjA2My9hcGkvY29tbWVudGVkIiwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImxvZ2luIiksCiAgICAgICAgICAgICAgICAgICAgcGFnZU5hbWU6IF90aGlzLnBhZ2VOYW1lLAogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRUZXh0OiBfdGhpcy5Db21tZW50CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlc3BvbnNlLm9rID09PSB0cnVlKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmpzb24oKSk7CiAgICAgICAgICAgICAgICBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgicCIpOwogICAgICAgICAgICAgICAgcC5hcHBlbmQoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibG9naW4iKSArICI6IiArIF90aGlzLkNvbW1lbnQpOwogICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvbW1lbnRzIikuYXBwZW5kKHApOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgZXJyb3JEYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvcnMiLCBlcnJvckRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldENvbW1lbnRzOiBmdW5jdGlvbiBnZXRDb21tZW50cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo1NjA2My9hcGkvY29tbWVudGVkLyIgKyBfdGhpczIucGFnZU5hbWUsIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzcG9uc2Uuc3RhdHVzID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXMgPD0gMjk5KSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRDb21tZW50SW5ET006IGZ1bmN0aW9uIGFkZENvbW1lbnRJbkRPTSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgY29tbWVudHM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuZ2V0Q29tbWVudHMoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY29tbWVudHMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvbW1lbnRzKTsKCiAgICAgICAgICAgICAgICBfdGhpczMuY2xlYXJCb3goImNvbW1lbnRzIik7CgogICAgICAgICAgICAgICAgY29tbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoY29tbWVudCkgewogICAgICAgICAgICAgICAgICB2YXIgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInAiKTsKICAgICAgICAgICAgICAgICAgcC5hcHBlbmQoY29tbWVudCk7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjb21tZW50cyIpLmFwcGVuZChwKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjbGVhckJveDogZnVuY3Rpb24gY2xlYXJCb3goZWxlbWVudElEKSB7CiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50SUQpOwoKICAgICAgd2hpbGUgKGRpdi5maXJzdENoaWxkKSB7CiAgICAgICAgZGl2LnJlbW92ZUNoaWxkKGRpdi5maXJzdENoaWxkKTsKICAgICAgfQogICAgfQogIH0sCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgewogICAgdGhpcy5hZGRDb21tZW50SW5ET00oKTsKICB9Cn07"},{"version":3,"sources":["TheoryLogistic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n     <b-container fluid>\r\n        <b-row>\r\n            <b-col></b-col>\r\n            <b-col cols=\"8\">\r\n                <h4>Логистическое отображение</h4>\r\n                <p>\r\n                   Логистическое (или <em>квадратичное</em>) отображение – это одно из самых известных\r\n                   отображений, которое демонстрирует хаотическую динамику, и оно выражается\r\n                   удивительно простым законом. Этот закон имеет в литературе несколько \r\n                   различных модификаций, сводящихся друг к другу, мы остановимся на таком варианте: \r\n                </p>\r\n                <div style=\"text-align: center\">\r\n                    <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_{n%2B1}=f(x_n)=rx_n(1-x_n)\"> (8)\r\n                </div>\r\n                <p>\r\n                    Функция, стоящая в правой части формулы (8), связана с именем бельгийского\r\n                    математика Пьера Ферхюльста, который в первой половине 19-го века предложил ее\r\n                    в качестве модели для скорости изменения численности популяции с учетом\r\n                    борьбы особей за ограниченные ресурсы или место обитания (в дополнение к известной теории \r\n                    народонаселения Мальтуса). Мы рассмотрим дискретный аналог\r\n                    дифференциального логистического уравнения Ферхюльста. В этом случае\r\n                    <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_n\"> - это\r\n                    нормированная численность популяции некоторого вида в какой-то момент времени (например, в какой-то год), а\r\n                    <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_{n%2B1}\"> это численность того же вида в следующий \r\n                    год. Значение 𝑥 меняется в пределах от 0 до 1, а в качестве <em>управляющего параметра</em> выступает 𝑟 – величина, меняющаяся от 0 до 4, \r\n                    характеризующая скороста популяции («рождаемость минус смертность»).\r\n                </p>\r\n                <div style=\"text-align: center\">\r\n                    <img src=\"../assets/paint_2.png\">\r\n                </div>   \r\n                <p>\r\n                    На Рис. 2 и Рис. 3 с помощью уже знакомой лестницы Ламерея показано, как\r\n                    происходит отображение одних точек в другие.\r\n                </p>\r\n                <p>\r\n                    <ol>\r\n                        <li>\r\n                            От начальной точки <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;0)\"> следует двигаться вертикально к линии\r\n                            отображения. Записывается точка пересечения с линией <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;x_1)\">, где\r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_1\"> получена в результате итерации <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_1=f(x_0)\">\r\n                        </li>\r\n                        <li>\r\n                            От точки <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;x_1)\"> нужно переходить по горизонтали к точке <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_1;x_1)\"><div class=\"\"></div>\r\n                            Совокупность точек, в которых обе координаты равны, – это биссектриса первой четверти, следовательно, горизонтальная линия должна соединять кривую отображения с биссектрисой.\r\n                        </li>\r\n                        <li>\r\n                            От биссектрисы снова строится вертикальная линия до пересечения с кривой отображения, т.е. к точке \r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_1;x_2)\">, где <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_2\"> получена в результате итерации \r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_2=f(x_1)\"> и повторяются пункты, начиная со второго.\r\n                        </li>\r\n                        <li>\r\n                            От начальной точки <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;0)\"> следует двигаться вертикально к линии\r\n                            отображения. Записывается точка пересечения с линией <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;x_1)\">, где\r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_1\"> получена в результате итерации <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_1=f(x_0)\">\r\n                        </li>\r\n                        <li>\r\n                            От точки <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_0;x_1)\"> нужно переходить по горизонтали к точке <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_1;x_1)\"><div class=\"\"></div>\r\n                            Совокупность точек, в которых обе координаты равны, – это биссектриса первой четверти, следовательно, горизонтальная линия должна соединять кривую отображения с биссектрисой.\r\n                        </li>\r\n                        <li>\r\n                            От биссектрисы снова строится вертикальная линия до пересечения с кривой отображения, т.е. к точке \r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=(x_1;x_2)\">, где <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_2\"> получена в результате итерации \r\n                            <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_2=f(x_1)\"> и повторяются пункты, начиная со второго.\r\n                        </li>\r\n                    </ol>                   \r\n                </p>\r\n                <div style=\"text-align: center\">\r\n                    <img src=\"../assets/paint_3.png\">\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                    <img src=\"../assets/paint_4.png\">\r\n                </div>\r\n                <p>\r\n                    В конечном счете получается похожая на \"лестницу\" ломаная линия, по которой\r\n                    очень легко наблюдать, как отображение приходит к притягивающим точкам или\r\n                    к устойчивым циклам.\r\n                </p>\r\n                <p>\r\n                    Наблюдая за тем, как выглядит лестница Ламерея при различных значениях параметра 𝑟\r\n                    , мы можем увидеть, что при определенных значениях параметра меняется\r\n                    результат построения лестницы. Такое изменение можно назвать <em>бифуркацией</em>.\r\n                </p>\r\n                <p>\r\n                    Термин бифуркация означает смену установившегося режима поведения системы, как правило,\r\n                     вследствие изменения управляющего параметра. Момент такой смены называют <em>точкой бифуркации</em>.\r\n                </p>\r\n                <p>\r\n                    Например, в логистическом отображении при переходе управляющего параметра 𝑟\r\n                    через начальное <em>критическое значение</em> <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=r_0 = 1\"> неподвижная\r\n                    <em>устойчивая точка</em> <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x_1^*=0\"> теряет свою устойчивость, и рядом\r\n                    с ней возникает новая неподвижная <em>устойчивая</em> точка <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x^*_2=1-1/r\">(см. Рис. 2.).\r\n                    Далее при увеличении управляющего параметра, при <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=r_1 = 3\"> уже\r\n                    <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=x^*_2\"> становится неустойчивой, а вокруг нее возникает устойчивый (его также называют <em>предельный</em>)\r\n                    цикл с периодом 2 (см. Рис. 3.). При следующем критическом значении <img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=r_2 = 1%2B\\sqrt{6}\\approx 3.45\">\r\n                    уже цикл с периодом 2 становится неустойчивым, и появляется устойчивый цикл с периодом 4. Такие изменения называют бифуркациями удвоения периода.\r\n                </p>\r\n                <div style=\"text-align: center\">\r\n                    <router-link\r\n                        to=\"/OneDimensionalMappings/0\"\r\n                        >                      \r\n                        <a href=\"#\" id=\"functionsLayouts\">Назад</a>\r\n                    </router-link>\r\n                    <router-link\r\n                        to=\"/OneDimensionalMappings/2\"\r\n                        >                      \r\n                        <a href=\"#\" id=\"functionsLayouts\">Далее</a>\r\n                    </router-link>\r\n                </div>\r\n                <form id=\"commentForm\">\r\n                    <div v-if =\"autorize === true\" class=\"form-group row\">\r\n                        <div class=\"form-group col-md-10\">\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"Comment\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-2\">\r\n                            <b-button type=\"button\" v-on:click=\"addComment\" form=\"commentForm\" variant=\"secondary\">Submit</b-button>\r\n                        </div>\r\n                    </div>\r\n                    <div v-if=\"autorize === false\">\r\n                        <p>Авторизируйтесь, чтобы оствлять комментарии</p>\r\n                    </div>\r\n                </form>\r\n                <div id=\"comments\"></div>   \r\n            </b-col>\r\n            <b-col></b-col>\r\n        </b-row>\r\n     </b-container>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n     data(){\r\n        return{\r\n            Comment: \"\" ,\r\n            pageName: \"TheoryLogistic\",\r\n            autorize: sessionStorage.getItem(\"accessToken\") === null ? false:true      \r\n        }\r\n    },\r\n    methods:{\r\n        async addComment(){\r\n             const response = await fetch(\"http://localhost:56063/api/commented\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body: JSON.stringify({\r\n                   userName: sessionStorage.getItem(\"login\"),\r\n                   pageName: this.pageName,\r\n                   commentText: this.Comment\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               const p = document.createElement(\"p\");\r\n                p.append(sessionStorage.getItem(\"login\")+\":\"+ this.Comment);\r\n                document.getElementById(\"comments\").append(p);\r\n           }\r\n           else{\r\n                const errorData = await response.json();             \r\n                console.log(\"errors\",errorData);\r\n           }\r\n        },\r\n        async getComments(){\r\n             const response = await fetch(\"http://localhost:56063/api/commented/\"+this.pageName,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\"Accept\": \"application/json\"}\r\n            });\r\n            if(response.status >=200 && response.status <= 299){\r\n                return await response.json();               \r\n            }\r\n            else{\r\n                console.log(response.status, response.statusText);\r\n            }\r\n        },\r\n        async addCommentInDOM(){\r\n            const comments = await this.getComments();\r\n            console.log(comments);\r\n            this.clearBox(\"comments\");           \r\n            comments.forEach(comment => {\r\n                const p = document.createElement(\"p\");\r\n                p.append(comment);\r\n                document.getElementById(\"comments\").append(p);\r\n            });\r\n        },\r\n        clearBox(elementID)\r\n        {\r\n            var div = document.getElementById(elementID);\r\n            while(div.firstChild){\r\n                div.removeChild(div.firstChild);\r\n             }\r\n        }\r\n    },\r\n    beforeMount(){\r\n        this.addCommentInDOM()\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n   p {\r\n    margin-top: 0em; /* Отступ сверху */\r\n    margin-bottom: 0em; /* Отступ снизу */\r\n   }\r\n</style>"],"sourceRoot":"src/views"}]}