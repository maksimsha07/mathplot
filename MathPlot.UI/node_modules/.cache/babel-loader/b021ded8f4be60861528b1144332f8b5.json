{"remainingRequest":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\src\\views\\MappPlank.vue","mtime":1636995230335},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\source\\repos\\MathPlot\\MathPlot\\mathplot.ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MappPlank.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,+BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,YAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,CAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,CAFA;AAGA,MAAA,IAAA,EAAA,CAHA;AAIA,MAAA,IAAA,EAAA,CAJA;AAKA,MAAA,IAAA,EAAA,CALA;AAMA,MAAA,UAAA,EAAA,KANA;AAOA,MAAA,KAAA,EAAA,KAPA;AAQA,MAAA,aAAA,EAAA,KARA;AASA,MAAA,cAAA,EAAA,IATA;AAUA,MAAA,eAAA,EAAA,IAVA;AAWA,MAAA,eAAA,EAAA,IAXA;AAYA,MAAA,YAAA,EAAA,IAZA;AAaA,MAAA,aAAA,EAAA,IAbA;AAcA,MAAA,CAAA,EAAA,EAdA;AAeA,MAAA,CAAA,EAAA,EAfA;AAgBA,MAAA,EAAA,EAAA,EAhBA;AAiBA,MAAA,EAAA,EAAA;AAjBA,KAAA;AAmBA,GAzBA;AA0BA,EAAA,OA1BA,qBA0BA,CACA,CA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,CADA,aACA,CADA,EACA;AACA,aAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,EAJA,cAIA,CAJA,EAIA,CAJA,EAIA;AACA,aAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,KANA;AAOA,IAAA,KAPA,iBAOA,CAPA,EAOA,CAPA,EAOA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,KATA;AAUA,IAAA,YAVA,0BAUA;AACA,WAAA,CAAA,GAAA,EAAA;AACA,WAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,CAAA,GAAA,IAAA,EAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,WAAA,cAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,CADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,aADA;AAEA,UAAA,IAAA,EAAA,KAAA,CAFA;AAGA,UAAA,IAAA,EAAA,KAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,WAAA,EAAA;AALA,SADA,EAOA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,KAAA,CAFA;AAGA,UAAA,IAAA,EAAA,KAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,WAAA,EAAA;AALA,SAPA;AAFA,OAAA;AAkBA,WAAA,YAAA,GAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,GAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CADA;AAEA,YAAA,GAAA,EAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAFA;AAGA,YAAA,KAAA,EAAA;AACA,cAAA,QAAA,EAAA;AADA;AAHA,WADA;AADA;AAFA,OAAA;AAcA,KAjDA;AAkDA,IAAA,UAlDA,wBAkDA;AACA,WAAA,EAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,CAAA,GAAA,IAAA,EAAA;AACA,aAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AACA,UAAA,GAAA,GAAA,KAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,KAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,KAAA,EAAA,CAAA,MAAA;AACA,UAAA,EAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;AAAA,QAAA,CAAA,EAAA,CAAA;AAAA,QAAA,CAAA,EAAA;AAAA,OAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,EAAA,GAAA,CAAA,GAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AACA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;AAAA,cAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,GAAA,CAAA;AAAA,aAAA;AACA;AACA;AAEA;;AACA,WAAA,eAAA,GAAA;AACA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA,0BAFA;AAGA,UAAA,WAAA,EAAA,gBAHA;AAIA,UAAA,eAAA,EAAA,gBAJA;AAKA,UAAA,WAAA,EAAA;AALA,SAAA;AADA,OAAA;AASA,KA9EA;AA+EA,IAAA,aA/EA,2BA+EA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,WAAA,EAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,KAAA,IAAA,EAAA,CAAA,GAAA,CAAA,GAAA,IAAA,EAAA;AACA,aAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AACA,UAAA,IAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,GAAA,GAAA,CAAA;AACA,YAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AACA,YAAA,GAAA,GAAA,EAAA;;AACA,aAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAA,EAAA,CAAA,MAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA;;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,KAAA,EAAA,CAAA,MAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,UAAA,GAAA,GAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,GAAA,KAAA;AACA,WAAA,eAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,EADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,qBADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,IAAA,EAAA,KAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,WAAA,EAAA,gBALA;AAMA,UAAA,WAAA,EAAA;AANA,SADA;AAFA,OAAA;AAaA,WAAA,aAAA,GAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA,aADA;AAIA,YAAA,KAAA,EAAA;AACA,cAAA,GAAA,EAAA,CAAA;AADA;AAJA,WAAA;AADA;AAFA,OAAA;AAcA,KAhIA;AAiIA,IAAA,UAjIA,wBAiIA;AACA,WAAA,YAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,aAAA,UAAA;AACA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,aAAA;AACA;AACA,KAzIA;AA0IA,IAAA,SA1IA,uBA0IA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,yCAAA,EACA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,OAAA,EAAA;AAAA,8BAAA,kBAAA;AAAA,oCAAA;AAAA,mBAFA;AAGA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,oBAAA,CAAA,EAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CADA;AAEA,oBAAA,UAAA,EAAA,KAAA,CAAA,UAFA;AAGA,oBAAA,KAAA,EAAA,KAAA,CAAA,KAHA;AAIA,oBAAA,aAAA,EAAA,KAAA,CAAA,aAJA;AAKA,oBAAA,KAAA,EAAA,cAAA,CAAA,OAAA,CAAA,OAAA,MAAA,IAAA,GAAA,IAAA,GAAA,cAAA,CAAA,OAAA,CAAA,OAAA;AALA,mBAAA;AAHA,iBADA,CADA;;AAAA;AACA,gBAAA,QADA;;AAaA,oBAAA,QAAA,CAAA,EAAA,KAAA,IAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AA3JA;AA5BA,CAAA","sourcesContent":["<template>\r\n    <b-container fluid>\r\n        <b-row>\r\n            <b-col>\r\n            </b-col>\r\n            <b-col>\r\n                <h1>Отображение Планка</h1>\r\n                <b-form id=\"mappingplank\">\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"r\">Значение r в диапазоне (0;7)</label>\r\n                            <b-form-input type=\"number\" size=\"sx-2\" id=\"r\" min=\"0\" max=\"7\" v-model=\"r\"></b-form-input>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lameria\">Построить с лестницей Ламерея</label>\r\n                            <b-form-checkbox id=\"lameria\" v-model=\"lestlameri\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"bifuraks\">Построить бифуркационную диаграмму</label>\r\n                            <b-form-checkbox id=\"bifuraks\" v-model=\"bifur\"></b-form-checkbox>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"lapunov\">Построить показатель Ляпунова</label>\r\n                            <b-form-checkbox id=\"lapunov\" v-model=\"pokazlapuniva\"></b-form-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\" id=\"modalrowsize\">\r\n                        <b-button type=\"button\" form=\"mappingplank\" variant=\"secondary\" v-on:click=\"paintChart\">Submit</b-button>\r\n                    </div>\r\n                </b-form>\r\n                <div class=\"small\">\r\n                    <line-chart :chart-data=\"datacollection\" :options=\"chartOptions \"/>\r\n                </div>\r\n                <div class=\"small\" v-if=\"bifur\">\r\n                    <scatter-chart :chart-data=\"datacollectionb\"/>\r\n                </div>\r\n                <div class=\"small\" v-if=\"pokazlapuniva\">\r\n                    <line-chart :chart-data=\"datacollectionl\" :options=\"chartOptionsl\"/>\r\n                </div>\r\n            </b-col>\r\n            <b-col>               \r\n            </b-col>\r\n        </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\n import LineChart from '../components/LineChart.js'\r\n import ScatterChart from '../components/ScatterChart.js'\r\nexport default{\r\n    components: {\r\n      LineChart,\r\n      ScatterChart,\r\n    },\r\n    data(){\r\n        return{\r\n            r: 4,\r\n            rMax:7,\r\n            rmin: 1,\r\n            xMax: 5,\r\n            xMin: 0,\r\n            lestlameri: false,\r\n            bifur: false,\r\n            pokazlapuniva: false,\r\n            datacollection: null,\r\n            datacollectionb: null,\r\n            datacollectionl: null,\r\n            chartOptions: null,\r\n            chartOptionsl: null,\r\n            x: [],\r\n            y: [],\r\n            ly: [],\r\n            rb: []        \r\n        }\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n       f(x){\r\n           return (this.r*Math.pow(x,3))/(1+Math.exp(x))\r\n       },\r\n       fr(x,r){\r\n            return (r*Math.pow(x,3))/(1+Math.exp(x))\r\n       },\r\n       fDiff(x,r){\r\n           return Math.log(Math.abs((r*Math.pow(x,2)*((x-3)*Math.exp(x)-3))/(Math.pow((1+Math.exp(x)),2))))\r\n       },\r\n      chartMapping(){\r\n          this.x = []\r\n          this.y = []\r\n        for (let i = this.xMin; i < this.xMax; i = i+0.01) {\r\n           this.x.push(i.toFixed(2)) \r\n           this.y.push(this.f(i))          \r\n        }\r\n          this.datacollection = {\r\n          labels: this.x,\r\n          datasets: [\r\n            {\r\n              label: 'Отображение',\r\n              data: this.y,\r\n              fill: false,\r\n              pointRadius: 0,\r\n               borderColor: 'rgb(139, 0, 0)'\r\n            }, {\r\n              label: 'y=x',\r\n              data: this.x,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(0, 0, 0)'\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptions = {\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                    min: this.x[0],\r\n                    max: this.x[this.x.length-1],\r\n                    ticks: {\r\n                        stepSize: 0.5\r\n                    }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n      },\r\n      chartBifur(){\r\n        this.rb = []\r\n        for (let i = this.rmin; i < this.rMax; i = i+0.01) {\r\n            this.rb.push(i.toFixed(2))           \r\n        }\r\n        var rdn = this.rb[Math.floor(Math.random()*this.rb.length)]\r\n        const nn = this.rb.length\r\n        var xx = []\r\n        var datas = [{x:1,y:1}]\r\n        for (let k = 0; k < nn;k++) {\r\n            xx = [rdn]\r\n            for (let n = 0; n < nn-1; n++) {\r\n                xx.push(this.fr(xx[n],this.rb[k]))\r\n                if(n>nn-20){\r\n                    datas.push({x:this.rb[k],y:xx[xx.length-1]})\r\n                }\r\n            }\r\n            \r\n        }\r\n         this.datacollectionb = {\r\n            datasets: [{\r\n                data: datas,\r\n                label: \"Бифуракционная Диаграмма\",\r\n                borderColor: 'rgb(139, 0, 0)',\r\n                backgroundColor: 'rgb(139, 0, 0)',\r\n                pointRadius: 1\r\n            }]\r\n        }\r\n      },\r\n      chartLyapunov(){\r\n          const start= new Date().getTime();\r\n          this.rb = []\r\n          for (let i = this.rmin; i < this.rMax; i = i+0.01) {\r\n            this.rb.push(i.toFixed(2))           \r\n         } \r\n          var summ = [] \r\n          for (let j = 0; j < this.rb.length; j++) {\r\n              var sum = 0\r\n              var xl = [2.0]\r\n              var xll = []\r\n              for (let i = 0; i < this.rb.length-1; i++) {\r\n                  xl.push(this.fr(xl[i],this.rb[j]))\r\n                  xll.push(this.fDiff(xl[i],this.rb[j]))\r\n                  sum = sum+ xll[i] \r\n              }\r\n              summ.push(sum/this.rb.length)\r\n          }\r\n          console.log(xl)\r\n          console.log(xll)\r\n          const end = new Date().getTime();\r\n          console.log(end-start);\r\n           this.datacollectionl = {\r\n          labels: this.rb,\r\n          datasets: [\r\n            {\r\n              label: 'Показатели Ляпунова',\r\n              data: summ,\r\n              fill: false,\r\n              pointRadius: 0,\r\n              borderColor: 'rgb(139, 0, 0)',\r\n              borderWidth: 1,\r\n            }\r\n          ]\r\n        }\r\n        this.chartOptionsl = {\r\n            responsive: true,\r\n            scales: {\r\n               yAxes: [{\r\n                gridLines: {\r\n                    display: true\r\n                },\r\n                ticks: {   \r\n                    min: -1,     \r\n                }\r\n                \r\n                }]\r\n            }\r\n        }\r\n      },\r\n      paintChart(){\r\n          this.chartMapping()\r\n          if(this.bifur){\r\n              this.chartBifur()\r\n          }\r\n          if(this.pokazlapuniva){\r\n            this.chartLyapunov()\r\n          }\r\n      },\r\n      async paintmapp(){\r\n           const response = await fetch(\"http://localhost:56063/api/mappingplank\",\r\n           {\r\n               method: \"POST\",\r\n               headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\r\n               body:JSON.stringify({\r\n                    r: Number(this.kofr),\r\n                    lestlameri: this.lestlameri,\r\n                    bifur: this.bifur,\r\n                    pokazlapuniva: this.pokazlapuniva,\r\n                    login: sessionStorage.getItem(\"login\") === null ? null:sessionStorage.getItem(\"login\"),\r\n               })\r\n           });\r\n           if(response.ok === true){\r\n               console.log(response.json());\r\n               console.log(Number(this.kofr) + typeof(Number(this.kofr)))\r\n           }          \r\n        }\r\n    }\r\n  \r\n}\r\n\r\n</script>\r\n\r\n"],"sourceRoot":"src/views"}]}